// @flow

export default function update(el: HTMLTextAreaElement, headToCursor: string, cursorToTail: ?string) {
  const curr = el.value,                            // strA + strB1 + strC
        next = headToCursor + (cursorToTail || ''); // strA + strB2 + strC

  //  Calculate length of strA and strC
  let aLength = 0,
      cLength = 0;
  while (curr[aLength] === next[aLength]) { aLength++; }
  while (curr[curr.length - cLength - 1] === next[next.length - cLength - 1]) { cLength++; }

  // Select strB1
  el.setSelectionRange(aLength, curr.length - cLength);

  // Get strB2
  const strB2 = next.substring(aLength, next.length - cLength);

  // Replace strB1 with strB2
  if (!document.execCommand('insertText', false, strB2)) {
    // Document.execCommand returns false if the command is not supported.
    // Firefox and IE returns false in this case.
    el.value = next;
  }

  // Move cursor to the end of headToCursor
  el.setSelectionRange(headToCursor.length, headToCursor.length);
  return el;
}

export function wrapCursor(el: HTMLTextAreaElement, before: string, after: ?string) {
  const initEnd = el.selectionEnd,
        headToCursor = el.value.substr(0, el.selectionStart) + before,
        cursorToTail = el.value.substring(el.selectionStart, initEnd) + (after || '') + el.value.substr(initEnd);
  update(el, headToCursor, cursorToTail);
  el.selectionEnd = initEnd + before.length;
  return el;
}
